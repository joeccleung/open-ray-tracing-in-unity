#ifndef PHONG_COMPUTE
#define PHONG_COMPUTE

StructuredBuffer<float4> DemoMat_color;

// [shader(Phong)]

void Phong_SecRays(
    inout Ray ray,
    RayHit hit,
    inout SecRaysAtHit secRaysAtHit
)
{
}

float3 Phong(
   inout Ray ray,
   RayHit hit,
   float3 ambientLightUpper,
   float3 secondaryRayColor
)
{
    float3 color = float3(0, 0, 0);

    float4 mat = DemoMat_color[_Primitives[hit.primitiveId].materialInstanceIndex];

    [fastopt] for(int l = 0; l < _NumOfLights; l++)
    {
        LightHit light0 = GetIlluminate(hit.position, ray.medium, hit.primitiveId, l);   // Phong is hit on the surface, so medium = whereever the ray is traversing

        float nDotL = dot(hit.normal, -1 * light0.direction);
        if (nDotL >= 0)
        {
            color += mat.xyz * light0.color * nDotL;
        }
    }

   return color;
}

float3 Phong_OnShadowRayHit(Ray ray, RayHit hit)
{
    return float3(0, 0, 0); // Opaque
}

#endif // PHONG_COMPUTE